# Fichero de propiedades común de todos los microservicios de la aplicación para Spring Config Server
# El nombre de este archivo de propiedades tiene que llamarse exactamente "application.properties"
# Si estas propiedades ya existen en el archivo "application.properties" de cada microservicio,sus valores se van a sobrescribir por aquellos indicados en este archivo
# Las propiedades indicadas aquí que no existan en el archivo "application.properties",se van a combinar con ellas
# Estas dos propiedades se corresponden con las credenciales de la aplicación cliente para solicitar la generación y obtención del token JWT en nuestro servidor de autorización Oauth2
config.security.oauth.client.id=frontendapp
config.security.oauth.client.secret=12345
# Creamos esta propiedad para almacenar la clave secreta para la generación(en nuestro servidor de autorización Oauth2) y validación del token JWT(en nuestro servidor de recursos)
config.security.oauth.jwt.key=algun_codigo_secreto_aeiou
# Esta propiedad es para indicar la ruta o path donde se está ejecutando el servidor Zipkin
# Url si el servidor Zipkin se ejecuta en local -> http://localhost:9411/
# Url si el servidor Zipkin se ejecuta en Docker en un contenedor con nombre "zipkin-server" -> http://zipkin-server:9411/
#spring.zipkin.base-url=http://localhost:9411/
# Esta propiedad es para indicar el nombre de la máquina donde se está ejecutando el broker o cola de mensajería RabbitMQ
# Host si RabbitMQ se ejecuta en local -> localhost
# Host si RabbitMQ se ejecuta en Docker en un contenedor con nombre "microservicios-rabbitmq38" -> microservicios-rabbitmq38
#spring.rabbitmq.host=microservicios-rabbitmq38

# Nota: Estas propiedades sólo funcionan si se usa el contexto de Bootstrap
#spring.cloud.config.allow-override: true
#spring.cloud.config.override-none: true
#spring.cloud.config.override-system-properties: false